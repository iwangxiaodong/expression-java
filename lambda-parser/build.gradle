buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0' 
    }
}

plugins {
    id 'java-library'
    id "com.jfrog.bintray" version "1.8.0"
}

apply plugin: 'org.junit.platform.gradle.plugin'
junitPlatform {
    //reportsDir file('build/test-results/test')
}

//defaultTasks  'clean','build','uploadArchives'

sourceCompatibility = JavaVersion.VERSION_1_9

version '1.1.6'
group 'com.openle.source.expression'

// 兼容中文注释和排除module-info.java
tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
    title =title+" - Open Source"
    excludes = ['module-info.java','**/xxx/**']
    //failOnError = false
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs = ['-Xlint:unchecked']
}

repositories {
    maven {
        url 'https://dl.bintray.com/wangxiaodong/maven/'
    }
       
    maven {
        credentials {
            username 'webdav'
            ext.pwd = project.hasProperty('WEBDAV_PASSWORD') ? project.property('WEBDAV_PASSWORD') : System.getenv('WEBDAV_PASSWORD')
            //println ext.pwd
            password ext.pwd
        }
        url "http://all.openle.com:30580/repository"
    }
    
    jcenter()

}

configurations {
    deployerJars
}

dependencies {

    // v3.0.0版本初测似乎上传不了！
    deployerJars group: 'org.apache.maven.wagon', name: 'wagon-webdav-jackrabbit', version: '2.12'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    implementation group: 'com.openle.module.lambda', name: 'lambda', version: '1.0.6'

    implementation group: 'javax.enterprise', name: 'cdi-api', version: '2.0'

    //for method ref
    implementation "org.mockito:mockito-core:+"

    // for @javax.persistence.Table and @Embeddable
    //compile group: 'javax', name: 'javaee-web-api', version: '8.0'
    // javaee-web-api跟java.sql冲突，so暂用javax.persistence-api
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

    testCompile("org.junit.jupiter:junit-jupiter-api:5.1.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.1.1")
}

compileJava {
    doFirst {
        options.compilerArgs = [
                    '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            pom.artifactId =project.archivesBaseName.toLowerCase()
            configuration = configurations.deployerJars

            // Win10重启后环境变量方有效 echo %WEBDAV_PASSWORD%
            ext.pwd = project.hasProperty('WEBDAV_PASSWORD') ? project.property('WEBDAV_PASSWORD') : System.getenv('WEBDAV_PASSWORD')
            //println ext.pwd
            repository(url: "dav:http://all.openle.com:30580/repository/") {
                authentication(userName: "webdav", password: ext.pwd)
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// ./gradlew build bintrayUpload -PBINTRAY_API_KEY=myKey  //or 设定环境变量: export BINTRAY_API_KEY=myKey
// compile 'com.openle.source.expression:lambda-parser:1.1.1'
bintray {
    user = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
    //println key
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = 'lambda-parser'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/iwangxiaodong/expression-java.git'
        version {
            name = project.version.toString()
            desc = 'Lambda Parser'
        }
    }
}